<?xml version="1.0" encoding="UTF-8"?>

<mule  
xmlns:debugger="http://www.mulesoft.org/schema/mule/debugger" 
xmlns="http://www.mulesoft.org/schema/mule/core" 
xmlns:json="http://www.mulesoft.org/schema/mule/json" 
xmlns:github="http://www.mulesoft.org/schema/mule/github" 
xmlns:jira="http://www.mulesoft.org/schema/mule/jira" 
xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
xmlns:spring="http://www.springframework.org/schema/beans" 
xmlns:core="http://www.mulesoft.org/schema/mule/core" 
xmlns:script="http://www.mulesoft.org/schema/mule/scripting" 
xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:context="http://www.springframework.org/schema/context"
version="CE-3.2.1" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd 
http://www.mulesoft.org/schema/mule/github http://www.mulesoft.org/schema/mule/github/1.0/mule-github.xsd 
http://www.mulesoft.org/schema/mule/jira http://www.mulesoft.org/schema/mule/jira/2.0/mule-jira.xsd 
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/debugger http://www.mulesoft.org/schema/mule/debugger/current/mule-debugger.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
 ">

	<context:property-placeholder location="mule.prod.properties" />
	<jira:config name="Jira" connectionUser="${jira.username}" connectionPassword="${jira.password}" connectionAddress="${jira.connectionAddress}" doc:name="Jira" />

	<flow name="GithubIssues2Jira" doc:name="Get all GitHub repos for the specified org">
		<poll frequency="1800000">
			<jira:get-issues-from-jql-search config-ref="Jira" jqlSearch="${jira.getIssues.jql.update}" maxNumResults="1000" doc:name="Jira" />
		</poll>
		<collection-splitter doc:name="Iterate over the collection of filtered GitHub repo names" />
			<flow-ref name="jira.sync.comments"/>
    </flow>
    

 	<flow name="jira.sync.comments" processingStrategy="synchronous">
	        <message-properties-transformer scope="invocation" doc:name="Message Properties">
				<add-message-property key="jiraIssueKey" value="#[groovy:payload.key]" />
			</message-properties-transformer>
           <jira:get-comments issueKey="#[groovy:payload.key]"/>
			<choice>
		        <when expression="#[groovy:payload.size() != 0]">
            		<foreach collection="#[payload:]">
		<debugger:breakpoint/>
					    <choice>
					        <when expression="#[groovy:payload.body.split(' | ')[0]]">
					        	<script:component>
								    <script:script file="updateCommentsJira.groovy"/>
								</script:component>
<!-- 					        	<jira:edit-comment commentId="#[groovy:payload.id]" body="#[groovy:message.getInvocationProperty('jiraCommentNewBody')]" updateAuthor="updatedBot" /> -->
					            <logger level="INFO" message="Comment: #[groovy:payload.id] has been updated at Jira Issue: #[groovy:message.getInvocationProperty('jiraIssueKey')]"/>
					        </when>
			               <otherwise>
					           <logger level="INFO" message="No comments to update"/>
					       </otherwise>
					    </choice>
					</foreach>
		        </when>
               <otherwise>
		           <logger level="INFO" message="No comments to update"/>
		       </otherwise>
		    </choice>

 	</flow>



</mule>